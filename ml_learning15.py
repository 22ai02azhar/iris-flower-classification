# -*- coding: utf-8 -*-
"""ML_Learning15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hgs4CyEu4p0YydKIeHHB0-CUUSfZUSeX
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix

iris=load_iris()
df=pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['species']=iris.target
df['species_names']=df['species'].apply(lambda x: iris.target_names[x])

print(df.head())

print(df.describe())

print(df['species_names'].value_counts())

sns.pairplot(df, hue='species_names')
plt.show()

X=df[iris.feature_names]
y=df['species']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

sclar=StandardScaler()
X_train=sclar.fit_transform(X_train)
X_test=sclar.transform(X_test)

model=LogisticRegression()
model.fit(X_train,y_train)

y_pred=model.predict(X_test)

print("Accuacy:",accuracy_score(y_test,y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

new_sample = np.array([[5.1, 3.5, 1.4, 0.2]])  # Sample flower measurements
new_sample = sclar.transform(new_sample)
predicted_class = model.predict(new_sample)
print("Predicted Species:", iris.target_names[predicted_class[0]])

